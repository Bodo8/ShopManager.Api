// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ZarzadzanieCenami.Api.Infrastructure.Persistence;

#nullable disable

namespace ZarzadzanieCenami.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251010100206_AddListDiscount")]
    partial class AddListDiscount
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DiscountProduct", b =>
                {
                    b.Property<int>("DiscountsId")
                        .HasColumnType("integer")
                        .HasColumnName("discounts_id");

                    b.Property<int>("ProductsId")
                        .HasColumnType("integer")
                        .HasColumnName("products_id");

                    b.HasKey("DiscountsId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("discount_product");
                });

            modelBuilder.Entity("DiscountShop", b =>
                {
                    b.Property<int>("DiscountsId")
                        .HasColumnType("integer")
                        .HasColumnName("discounts_id");

                    b.Property<int>("ShopsId")
                        .HasColumnType("integer")
                        .HasColumnName("shops_id");

                    b.HasKey("DiscountsId", "ShopsId");

                    b.HasIndex("ShopsId");

                    b.ToTable("discount_shop");
                });

            modelBuilder.Entity("ProductShop", b =>
                {
                    b.Property<int>("ProductsId")
                        .HasColumnType("integer")
                        .HasColumnName("products_id");

                    b.Property<int>("ShopsId")
                        .HasColumnType("integer")
                        .HasColumnName("shops_id");

                    b.HasKey("ProductsId", "ShopsId");

                    b.HasIndex("ShopsId");

                    b.ToTable("product_shop");
                });

            modelBuilder.Entity("ZarzadzanieCenami.Api.Domain.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("city");

                    b.Property<int>("ShopId")
                        .HasColumnType("integer")
                        .HasColumnName("shop_id");

                    b.HasKey("Id");

                    b.HasIndex("ShopId")
                        .IsUnique();

                    b.ToTable("addresses");
                });

            modelBuilder.Entity("ZarzadzanieCenami.Api.Domain.Entities.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("description");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("expiration_date");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("numeric")
                        .HasColumnName("percentage");

                    b.HasKey("Id");

                    b.ToTable("discounts");
                });

            modelBuilder.Entity("ZarzadzanieCenami.Api.Domain.Entities.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("numeric")
                        .HasColumnName("base_price");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("effective_date");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("prices");
                });

            modelBuilder.Entity("ZarzadzanieCenami.Api.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("products");
                });

            modelBuilder.Entity("ZarzadzanieCenami.Api.Domain.Entities.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("shops");
                });

            modelBuilder.Entity("DiscountProduct", b =>
                {
                    b.HasOne("ZarzadzanieCenami.Api.Domain.Entities.Discount", null)
                        .WithMany()
                        .HasForeignKey("DiscountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZarzadzanieCenami.Api.Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DiscountShop", b =>
                {
                    b.HasOne("ZarzadzanieCenami.Api.Domain.Entities.Discount", null)
                        .WithMany()
                        .HasForeignKey("DiscountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZarzadzanieCenami.Api.Domain.Entities.Shop", null)
                        .WithMany()
                        .HasForeignKey("ShopsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductShop", b =>
                {
                    b.HasOne("ZarzadzanieCenami.Api.Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZarzadzanieCenami.Api.Domain.Entities.Shop", null)
                        .WithMany()
                        .HasForeignKey("ShopsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ZarzadzanieCenami.Api.Domain.Entities.Address", b =>
                {
                    b.HasOne("ZarzadzanieCenami.Api.Domain.Entities.Shop", "Shop")
                        .WithOne("Address")
                        .HasForeignKey("ZarzadzanieCenami.Api.Domain.Entities.Address", "ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("ZarzadzanieCenami.Api.Domain.Entities.Price", b =>
                {
                    b.HasOne("ZarzadzanieCenami.Api.Domain.Entities.Product", "Product")
                        .WithMany("Prices")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ZarzadzanieCenami.Api.Domain.Entities.Product", b =>
                {
                    b.Navigation("Prices");
                });

            modelBuilder.Entity("ZarzadzanieCenami.Api.Domain.Entities.Shop", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
