services:
  db:
    image: postgres:17
    container_name: postgres_dock
    restart: unless-stopped
    env_file:
      - /home/admin/appfiles/postgres/db.env
    volumes:
      - /home/admin/docker/data/postgres:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"
    networks:
      - shop-network

  shop-api:
    image: ghcr.io/bodo8/shop-api:latest
    container_name: shop-api-app
    restart: unless-stopped
    env_file:
      - /home/admin/appfiles/zarzadzcenami/app.env
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5000
    expose:
      - "5000"
    depends_on:
      - db
    networks:
      - shop-network

  shop-manager:
    image: ghcr.io/bodo8/shop-manager:latest
    container_name: shop-manager-app
    restart: "no"
    env_file:
      - /home/admin/appfiles/frontend/frontend.env
    volumes:
      - app-client-build:/app/dist/zarzadzanie-cenami
    expose:
      - "80"
    networks:
      - shop-network

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - /home/admin/docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - app-client-build:/usr/share/nginx/html:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      - shop-manager
      - shop-api
    networks:
      - shop-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  app-client-build:
  nginx-logs:

networks:
  shop-network:
    driver: bridge 